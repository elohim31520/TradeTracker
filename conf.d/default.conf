limit_req_zone $binary_remote_addr zone=one:10m rate=5r/s; # 5 requests per second, same as 50r/10s

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name urtrade.trade www.urtrade.trade;

    # Route for Let's Encrypt challenge (still needed for renewals)
    location /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    server_name urtrade.trade www.urtrade.trade;

    # SSL Certificate
    ssl_certificate /etc/letsencrypt/live/urtrade.trade/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/urtrade.trade/privkey.pem;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # Proxy to Node.js app
    location / {
        limit_req zone=one burst=20 nodelay;
        limit_req_status 429;

        proxy_pass http://app:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
} 