services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
      - ./logs:/var/log/nginx
      - ./html:/usr/share/nginx/html
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - app

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./html:/usr/share/nginx/html
    command: certonly --webroot --webroot-path=/usr/share/nginx/html --email ${MY_EMAIL} --agree-tos --no-eff-email -d urtrade.trade -d www.urtrade.trade --staging

  redis:
    image: "redis:alpine"
    container_name: redis
    networks:
      - app-network
    volumes:
      - redis-data:/data

  app:
    build: .
    image: ur-trade-app
    container_name: ur-trade-app
    depends_on:
      - redis
      - mysql
    environment:
      - NODE_ENV=${NODE_ENV}
      - REDIS_URL=${REDIS_URL}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - NGINX_HOST=${NGINX_HOST}
      - NGINX_PORT=${NGINX_PORT}
    networks:
      - app-network
    volumes:
      - ./logs:/app/logs
    command: node ./dist/app.js

  cron:
    image: ur-trade-app
    container_name: ur-trade-cron
    depends_on:
      - redis
      - mysql
    environment:
      - NODE_ENV=${NODE_ENV}
      - REDIS_URL=${REDIS_URL}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
    networks:
      - app-network
    volumes:
      - ./logs:/app/logs
    command: node ./dist/cronjob.js

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
    ports:
      - "3306:3306"
    networks:
      - app-network
    volumes:
      - mysql-data:/var/lib/mysql

networks:
  app-network:
    driver: bridge

volumes:
  certbot-etc:
  certbot-var:
  redis-data: {}
  mysql-data: {}