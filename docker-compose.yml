version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    networks:
      - elk
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./logs:/var/log/nginx
      - ./html:/usr/share/nginx/html
      - ./conf.d:/etc/nginx/conf.d

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.transport.ssl.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.0
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    networks:
      - elk

  redis:
    image: "redis:alpine"
    container_name: redis
    networks:
      - elk
    volumes:
      - redis-data:/data

  app:
    build: .
    container_name: ur-trade-app
    depends_on:
      - elasticsearch
      - redis
      - mysql
      - nginx
    environment:
      - NODE_ENV=${NODE_ENV}
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL}
      - REDIS_URL=${REDIS_URL}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - NGINX_HOST=${NGINX_HOST}
      - NGINX_PORT=${NGINX_PORT}
    networks:
      - elk
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules # Prevents local node_modules from overwriting container's
    command: node /dist/app.js

  cron:
    build: .
    container_name: ur-trade-cron
    depends_on:
      - elasticsearch
      - redis
      - mysql
    environment:
      - NODE_ENV=${NODE_ENV}
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL}
      - REDIS_URL=${REDIS_URL}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    networks:
      - elk
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: node /dist/cronjob.js

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=ur_trade
    ports:
      - "3306:3306"
    networks:
      - elk
    volumes:
      - mysql-data:/var/lib/mysql

networks:
  elk:
    driver: bridge

volumes:
  esdata:
    driver: local
  redis-data: {}
  mysql-data: {}